{
  "version": 3,
  "sources": ["../node_modules/peerjs-js-binarypack/lib/bufferbuilder.js", "../node_modules/peerjs-js-binarypack/lib/binarypack.js", "../node_modules/eventemitter3/index.js", "../lib/utils.ts", "../lib/peer.ts", "../lib/logger.ts", "../lib/socket.ts", "../lib/negotiator.ts", "../lib/baseconnection.ts", "../lib/mediaconnection.ts", "../lib/encodingQueue.ts", "../lib/dataconnection.ts", "../lib/api.ts", "../lib/supports.ts", "../lib/index.ts"],
  "sourcesContent": ["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n", "var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import * as BinaryPack from \"peerjs-js-binarypack\";\n\nconst DEFAULT_CONFIG = {\n\ticeServers: [\n\t\t{ urls: \"stun:stun.l.google.com:19302\" },\n\t\t{\n\t\t\turls: \"turn:0.peerjs.com:3478\",\n\t\t\tusername: \"peerjs\",\n\t\t\tcredential: \"peerjsp\",\n\t\t},\n\t],\n\tsdpSemantics: \"unified-plan\",\n};\n\nexport const Utils = new (class {\n\treadonly CLOUD_HOST = \"0.peerjs.com\";\n\treadonly CLOUD_PORT = 443;\n\n\treadonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n\t// Returns browser-agnostic default config\n\treadonly defaultConfig = DEFAULT_CONFIG;\n\n\t// Ensure alphanumeric ids\n\tvalidateId(id: string): boolean {\n\t\t// Allow empty ids\n\t\treturn !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n\t}\n\n\tpack = BinaryPack.pack;\n\tunpack = BinaryPack.unpack;\n\n\t// Binary stuff\n\n\tprivate _dataCount: number = 1;\n\n\tchunk(\n\t\tblob: Blob,\n\t): { __peerData: number; n: number; total: number; data: Blob }[] {\n\t\tconst chunks = [];\n\t\tconst size = blob.size;\n\t\tconst total = Math.ceil(size / Utils.chunkedMTU);\n\n\t\tlet index = 0;\n\t\tlet start = 0;\n\n\t\twhile (start < size) {\n\t\t\tconst end = Math.min(size, start + Utils.chunkedMTU);\n\t\t\tconst b = blob.slice(start, end);\n\n\t\t\tconst chunk = {\n\t\t\t\t__peerData: this._dataCount,\n\t\t\t\tn: index,\n\t\t\t\tdata: b,\n\t\t\t\ttotal,\n\t\t\t};\n\n\t\t\tchunks.push(chunk);\n\n\t\t\tstart = end;\n\t\t\tindex++;\n\t\t}\n\n\t\tthis._dataCount++;\n\n\t\treturn chunks;\n\t}\n\n\tblobToArrayBuffer(\n\t\tFileReaderCtr: typeof FileReader,\n\t\tblob: Blob,\n\t\tcb: (arg: ArrayBuffer | null) => void,\n\t): FileReader {\n\t\tconst fr = new FileReaderCtr();\n\n\t\tfr.onload = function (evt) {\n\t\t\tif (evt.target) {\n\t\t\t\tcb(evt.target.result as ArrayBuffer);\n\t\t\t}\n\t\t};\n\n\t\tfr.readAsArrayBuffer(blob);\n\n\t\treturn fr;\n\t}\n\n\tbinaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n\t\tconst byteArray = new Uint8Array(binary.length);\n\n\t\tfor (let i = 0; i < binary.length; i++) {\n\t\t\tbyteArray[i] = binary.charCodeAt(i) & 0xff;\n\t\t}\n\n\t\treturn byteArray.buffer;\n\t}\n\n\trandomToken(): string {\n\t\treturn Math.random().toString(36).substr(2);\n\t}\n\n\tisSecure(): boolean {\n\t\treturn location.protocol === \"https:\";\n\t}\n})();\n", "import { EventEmitter } from \"eventemitter3\";\nimport { Utils } from \"./utils\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n\tConnectionType,\n\tPeerErrorType,\n\tPeerEventType,\n\tSocketEventType,\n\tServerMessageType,\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport type { PeerConnectOption, PeerJSOption, Features } from \"..\";\nimport { Supports } from \"./supports\";\n\ninterface PeerOptions extends PeerJSOption {\n\tdebug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n\tlogFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n\tprivate static readonly DEFAULT_KEY = \"peerjs\";\n\n\tprivate readonly _options: PeerOptions;\n\tprivate readonly _api: API;\n\tprivate readonly _socket: Socket;\n\n\tprivate _id: string | null = null;\n\tprivate _lastServerId: string | null = null;\n\n\t// States.\n\tprivate _destroyed = false; // Connections have been killed\n\tprivate _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n\tprivate _open = false; // Sockets and such are not yet open.\n\tprivate readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n\tprivate readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\tget socket() {\n\t\treturn this._socket;\n\t}\n\n\t/**\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */\n\tget connections(): Object {\n\t\tconst plainConnections = Object.create(null);\n\n\t\tfor (let [k, v] of this._connections) {\n\t\t\tplainConnections[k] = v;\n\t\t}\n\n\t\treturn plainConnections;\n\t}\n\n\tget destroyed() {\n\t\treturn this._destroyed;\n\t}\n\tget disconnected() {\n\t\treturn this._disconnected;\n\t}\n\n\treadonly features: Features;\n\n\tconstructor(id?: string | PeerOptions, options?: PeerOptions) {\n\t\tsuper();\n\n\t\tlet userId: string | undefined;\n\n\t\t// Deal with overloading\n\t\tif (id && id.constructor == Object) {\n\t\t\toptions = id as PeerOptions;\n\t\t} else if (id) {\n\t\t\tuserId = id.toString();\n\t\t}\n\n\t\t// Configure options\n\t\toptions = {\n\t\t\tdebug: 0, // 1: Errors, 2: Warnings, 3: All logs\n\t\t\thost: Utils.CLOUD_HOST,\n\t\t\tport: Utils.CLOUD_PORT,\n\t\t\tpath: \"/\",\n\t\t\tkey: Peer.DEFAULT_KEY,\n\t\t\ttoken: Utils.randomToken(),\n\t\t\tconfig: Utils.defaultConfig,\n\t\t\t...options,\n\t\t};\n\t\tthis._options = options;\n\n\t\t// Detect relative URL host.\n\t\tif (typeof window !== \"undefined\" && this._options.host === \"/\") {\n\t\t\tthis._options.host = window.location.hostname;\n\t\t}\n\n\t\t// Set path correctly.\n\t\tif (this._options.path) {\n\t\t\tif (this._options.path[0] !== \"/\") {\n\t\t\t\tthis._options.path = \"/\" + this._options.path;\n\t\t\t}\n\t\t\tif (this._options.path[this._options.path.length - 1] !== \"/\") {\n\t\t\t\tthis._options.path += \"/\";\n\t\t\t}\n\t\t}\n\n\t\t// Set whether we use SSL to same as current host\n\t\tif (\n\t\t\tthis._options.secure === undefined &&\n\t\t\tthis._options.host !== Utils.CLOUD_HOST\n\t\t) {\n\t\t\tthis._options.secure = Utils.isSecure();\n\t\t} else if (this._options.host == Utils.CLOUD_HOST) {\n\t\t\tthis._options.secure = true;\n\t\t}\n\t\t// Set a custom log function if present\n\t\tif (this._options.logFunction) {\n\t\t\tlogger.setLogFunction(this._options.logFunction);\n\t\t}\n\n\t\tlogger.logLevel = this._options.debug || 0;\n\n\t\tthis._api = new API(options);\n\t\tthis._socket = this._createServerConnection();\n\n\t\tthis.features = Peer.getFeatures(this._options.polyfills?.WebRTC);\n\n\t\t// Sanity checks\n\t\t// Ensure WebRTC supported\n\t\tif (!this.features.audioVideo && !this.features.data) {\n\t\t\tthis._delayedAbort(\n\t\t\t\tPeerErrorType.BrowserIncompatible,\n\t\t\t\t\"The current browser does not support WebRTC\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure alphanumeric id\n\t\tif (!!userId && !Utils.validateId(userId)) {\n\t\t\tthis._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.socket.alive = true;\n\n\t\tif (userId) {\n\t\t\tthis._initialize(userId);\n\t\t} else {\n\t\t\tthis._api\n\t\t\t\t.retrieveId()\n\t\t\t\t.then((id) => this._initialize(id))\n\t\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t\t}\n\t}\n\n\tprivate _createServerConnection(): Socket {\n\t\tconst socket = new Socket(this._options);\n\n\t\tsocket.on(SocketEventType.Message, (data: ServerMessage) => {\n\t\t\tthis._handleMessage(data);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Error, (error: string) => {\n\t\t\tthis._abort(PeerErrorType.SocketError, error);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Disconnected, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tsocket.on(SocketEventType.Close, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._abort(\n\t\t\t\tPeerErrorType.SocketClosed,\n\t\t\t\t\"Underlying socket is already closed.\",\n\t\t\t);\n\t\t});\n\n\t\treturn socket;\n\t}\n\n\t/** Initialize a connection with the server. */\n\tprivate _initialize(id: string): void {\n\t\tif (this.destroyed) return;\n\n\t\tthis._id = id;\n\t\tthis.socket.start(id, this._options.token!);\n\t}\n\n\t/** Handles messages from the server. */\n\tprivate _handleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\t\tconst peerId = message.src;\n\n\t\tswitch (type) {\n\t\t\tcase ServerMessageType.Open: // The connection to the server is open.\n\t\t\t\tthis._lastServerId = this.id;\n\t\t\t\tthis._open = true;\n\t\t\t\tthis.emit(PeerEventType.Open, this.id);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Error: // Server error.\n\t\t\t\tthis._abort(PeerErrorType.ServerError, payload.msg);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.IdTaken: // The selected ID is taken.\n\t\t\t\tthis._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.InvalidKey: // The given API key cannot be found.\n\t\t\t\tthis._abort(\n\t\t\t\t\tPeerErrorType.InvalidKey,\n\t\t\t\t\t`API KEY \"${this._options.key}\" is invalid`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n\t\t\t\tlogger.log(`Received leave message from ${peerId}`);\n\t\t\t\tthis._cleanupPeer(peerId);\n\t\t\t\tthis._connections.delete(peerId);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n\t\t\t\tthis.emitError(\n\t\t\t\t\tPeerErrorType.PeerUnavailable,\n\t\t\t\t\t`Could not connect to peer ${peerId}`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Offer: {\n\t\t\t\t// we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tlet connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection) {\n\t\t\t\t\tconnection.close();\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`Offer received for existing Connection ID:${connectionId}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Create a new connection.\n\t\t\t\tif (payload.type === ConnectionType.Media) {\n\t\t\t\t\tconnection = new MediaConnection(peerId, this, {\n\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t});\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(PeerEventType.Call, connection);\n\t\t\t\t} else if (payload.type === ConnectionType.Data) {\n\t\t\t\t\tconnection = new DataConnection(peerId, this, {\n\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t\tlabel: payload.label,\n\t\t\t\t\t\tserialization: payload.serialization,\n\t\t\t\t\t\treliable: payload.reliable,\n\t\t\t\t\t});\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(PeerEventType.Connection, connection);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(`Received malformed connection type:${payload.type}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Find messages.\n\t\t\t\tconst messages = this._getMessages(connectionId);\n\t\t\t\tfor (let message of messages) {\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (!payload) {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`You received a malformed message from ${peerId} of type ${type}`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tconst connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection && connection.peerConnection) {\n\t\t\t\t\t// Pass it on.\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t} else if (connectionId) {\n\t\t\t\t\t// Store for possible later use\n\t\t\t\t\tthis._storeMessage(connectionId, message);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\"You received an unrecognized message:\", message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Stores messages without a set up connection, to be claimed later. */\n\tprivate _storeMessage(connectionId: string, message: ServerMessage): void {\n\t\tif (!this._lostMessages.has(connectionId)) {\n\t\t\tthis._lostMessages.set(connectionId, []);\n\t\t}\n\n\t\tthis._lostMessages.get(connectionId).push(message);\n\t}\n\n\t/** Retrieve messages from lost message store */\n\t//TODO Change it to private\n\tpublic _getMessages(connectionId: string): ServerMessage[] {\n\t\tconst messages = this._lostMessages.get(connectionId);\n\n\t\tif (messages) {\n\t\t\tthis._lostMessages.delete(connectionId);\n\t\t\treturn messages;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns a DataConnection to the specified peer. See documentation for a\n\t * complete list of options.\n\t */\n\tconnect(peer: string, options: PeerConnectOption = {}): DataConnection {\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect, or call reconnect \" +\n\t\t\t\t\t\"on this peer if you believe its ID to still be available.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataConnection = new DataConnection(peer, this, options);\n\t\tthis._addConnection(peer, dataConnection);\n\t\treturn dataConnection;\n\t}\n\n\t/**\n\t * Returns a MediaConnection to the specified peer. See documentation for a\n\t * complete list of options.\n\t */\n\tcall(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!stream) {\n\t\t\tlogger.error(\n\t\t\t\t\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\toptions._stream = stream;\n\n\t\tconst mediaConnection = new MediaConnection(peer, this, options);\n\t\tthis._addConnection(peer, mediaConnection);\n\t\treturn mediaConnection;\n\t}\n\n\t/** Add a data/media connection to this peer. */\n\tprivate _addConnection(peerId: string, connection: BaseConnection): void {\n\t\tlogger.log(\n\t\t\t`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`,\n\t\t);\n\n\t\tif (!this._connections.has(peerId)) {\n\t\t\tthis._connections.set(peerId, []);\n\t\t}\n\t\tthis._connections.get(peerId).push(connection);\n\t}\n\n\t//TODO should be private\n\t_removeConnection(connection: BaseConnection): void {\n\t\tconst connections = this._connections.get(connection.peer);\n\n\t\tif (connections) {\n\t\t\tconst index = connections.indexOf(connection);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tconnections.splice(index, 1);\n\n\t\t\t\tif (connections.length === 0) {\n\t\t\t\t\tthis._connections.delete(connection.peer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//remove from lost messages\n\t\tthis._lostMessages.delete(connection.connectionId);\n\t}\n\n\t/** Retrieve a data/media connection for this peer. */\n\tgetConnection(peerId: string, connectionId: string): null | BaseConnection {\n\t\tconst connections = this._connections.get(peerId);\n\t\tif (!connections) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let connection of connections) {\n\t\t\tif (connection.connectionId === connectionId) {\n\t\t\t\treturn connection;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _delayedAbort(type: PeerErrorType, message: string | Error): void {\n\t\tsetTimeout(() => {\n\t\t\tthis._abort(type, message);\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */\n\tprivate _abort(type: PeerErrorType, message: string | Error): void {\n\t\tlogger.error(\"Aborting!\");\n\n\t\tthis.emitError(type, message);\n\n\t\tif (!this._lastServerId) {\n\t\t\tthis.destroy();\n\t\t} else {\n\t\t\tthis.disconnect();\n\t\t}\n\t}\n\n\t/** Emits a typed error message. */\n\temitError(type: PeerErrorType, err: string | Error): void {\n\t\tlogger.error(\"Error:\", err);\n\n\t\tlet error: Error & { type?: PeerErrorType };\n\n\t\tif (typeof err === \"string\") {\n\t\t\terror = new Error(err);\n\t\t} else {\n\t\t\terror = err as Error;\n\t\t}\n\n\t\terror.type = type;\n\n\t\tthis.emit(PeerEventType.Error, error);\n\t}\n\n\t/**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t *  to the server.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  destroyed.\n\t */\n\tdestroy(): void {\n\t\tif (this.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.log(`Destroy peer with ID:${this.id}`);\n\n\t\tthis.disconnect();\n\t\tthis._cleanup();\n\n\t\tthis.socket.destroy();\n\n\t\tthis._destroyed = true;\n\n\t\tthis.emit(PeerEventType.Close);\n\t}\n\n\t/** Disconnects every connection on this peer. */\n\tprivate _cleanup(): void {\n\t\tfor (let peerId of this._connections.keys()) {\n\t\t\tthis._cleanupPeer(peerId);\n\t\t\tthis._connections.delete(peerId);\n\t\t}\n\n\t\tthis.socket.removeAllListeners();\n\t}\n\n\t/** Closes all connections to this peer. */\n\tprivate _cleanupPeer(peerId: string): void {\n\t\tconst connections = this._connections.get(peerId);\n\n\t\tif (!connections) return;\n\n\t\tfor (let connection of connections) {\n\t\t\tconnection.close();\n\t\t}\n\t}\n\n\t/**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */\n\tdisconnect(): void {\n\t\tif (this.disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentId = this.id;\n\n\t\tlogger.log(`Disconnect peer with ID:${currentId}`);\n\n\t\tthis._disconnected = true;\n\t\tthis._open = false;\n\n\t\tthis.socket.alive = false;\n\t\tthis.socket.close();\n\n\t\tthis._lastServerId = currentId;\n\t\tthis._id = null;\n\n\t\tthis.emit(PeerEventType.Disconnected, currentId);\n\t}\n\n\t/** Attempts to reconnect with the same ID. */\n\treconnect(): void {\n\t\tif (this.disconnected && !this.destroyed) {\n\t\t\tlogger.log(\n\t\t\t\t`Attempting reconnection to server with ID ${this._lastServerId}`,\n\t\t\t);\n\t\t\tthis._disconnected = false;\n\t\t\tthis.socket.alive = true;\n\t\t\tthis._initialize(this._lastServerId!);\n\t\t} else if (this.destroyed) {\n\t\t\tthrow new Error(\n\t\t\t\t\"This peer cannot reconnect to the server. It has already been destroyed.\",\n\t\t\t);\n\t\t} else if (!this.disconnected && !this.open) {\n\t\t\t// Do nothing. We're still connecting the first time.\n\t\t\tlogger.error(\n\t\t\t\t\"In a hurry? We're still trying to make the initial connection!\",\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */\n\tlistAllPeers(cb = (_: any[]) => {}): void {\n\t\tthis._api\n\t\t\t.listAllPeers()\n\t\t\t.then((peers) => cb(peers))\n\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t}\n\n\tstatic getFeatures(webRtc: any): Features {\n\t\tif (!webRtc && typeof window !== \"undefined\") {\n\t\t\twebRtc = window;\n\t\t}\n\n\t\tif (!Peer._features) {\n\t\t\tPeer._features = Peer.checkFeatures(webRtc);\n\t\t}\n\n\t\treturn Peer._features;\n\t}\n\n\tprivate static _features?: Features;\n\n\t// Lists which features are supported\n\tprivate static checkFeatures(webRtc: any): Features {\n\t\tif (!webRtc && typeof window !== \"undefined\") {\n\t\t\twebRtc = window;\n\t\t}\n\n\t\tconst supported: Features = {\n\t\t\twebRTC: typeof webRtc.RTCPeerConnection !== \"undefined\",\n\t\t\taudioVideo: true,\n\t\t\tdata: false,\n\t\t\tbinaryBlob: false,\n\t\t\treliable: false,\n\t\t\tunifiedPlan: false,\n\t\t};\n\n\t\tif (!supported.webRTC) return supported;\n\n\t\tlet pc: RTCPeerConnection;\n\n\t\ttry {\n\t\t\tpc = new webRtc.RTCPeerConnection(Utils.defaultConfig);\n\t\t\tlet dc: RTCDataChannel;\n\n\t\t\ttry {\n\t\t\t\tdc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n\t\t\t\tsupported.data = true;\n\t\t\t\tsupported.reliable = !!dc.ordered;\n\n\t\t\t\t// Binary test\n\t\t\t\ttry {\n\t\t\t\t\tdc.binaryType = \"blob\";\n\t\t\t\t\tsupported.binaryBlob = true; //not works for iOS?\n\t\t\t\t} catch (e) {}\n\t\t\t} catch (e) {\n\t\t\t} finally {\n\t\t\t\tif (dc) {\n\t\t\t\t\tdc.close();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (pc) {\n\t\t\t\tpc.close();\n\t\t\t}\n\t\t}\n\n\t\tsupported.unifiedPlan = Supports.isUnifiedPlanSupported(webRtc);\n\n\t\treturn supported;\n\t}\n}\n", "const LOG_PREFIX = \"PeerJS: \";\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n\tDisabled,\n\tErrors,\n\tWarnings,\n\tAll,\n}\n\nclass Logger {\n\tprivate _logLevel = LogLevel.Disabled;\n\n\tget logLevel(): LogLevel {\n\t\treturn this._logLevel;\n\t}\n\n\tset logLevel(logLevel: LogLevel) {\n\t\tthis._logLevel = logLevel;\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.All) {\n\t\t\tthis._print(LogLevel.All, ...args);\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Warnings) {\n\t\t\tthis._print(LogLevel.Warnings, ...args);\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Errors) {\n\t\t\tthis._print(LogLevel.Errors, ...args);\n\t\t}\n\t}\n\n\tsetLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n\t\tthis._print = fn;\n\t}\n\n\tprivate _print(logLevel: LogLevel, ...rest: any[]): void {\n\t\tconst copy = [LOG_PREFIX, ...rest];\n\n\t\tfor (let i in copy) {\n\t\t\tif (copy[i] instanceof Error) {\n\t\t\t\tcopy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\t\t\t}\n\t\t}\n\n\t\tif (logLevel >= LogLevel.All) {\n\t\t\tconsole.log(...copy);\n\t\t} else if (logLevel >= LogLevel.Warnings) {\n\t\t\tconsole.warn(\"WARNING\", ...copy);\n\t\t} else if (logLevel >= LogLevel.Errors) {\n\t\t\tconsole.error(\"ERROR\", ...copy);\n\t\t}\n\t}\n}\n\nexport default new Logger();\n", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport {\n\tSocketEventType,\n\tServerMessageType,\n\ttype ConnectionType,\n} from \"./enums\";\nimport type { PeerJSOption } from \"../index\";\n\ntype MessageData = {\n\ttype: ServerMessageType;\n\tdst: string;\n\tpayload: {\n\t\ttype: ConnectionType;\n\t\tconnectionId: string;\n\t} & Record<string, any>;\n};\n/**\n * An abstraction on top of WebSockets to provide the fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n\tprivate _disconnected: boolean = true;\n\tprivate _id: string | null = null;\n\tprivate _messagesQueue: Array<MessageData> = [];\n\tprivate _socket?: WebSocket;\n\tprivate _wsPingTimer?: any;\n\tprivate readonly _baseUrl: string;\n\n\tprivate readonly pingInterval: number;\n\tprivate readonly WebSocketConstructor: typeof WebSocket;\n\n\talive: boolean = false;\n\n\tprivate _destroyed = false;\n\n\tget messagesQueue(): ReadonlyArray<MessageData> {\n\t\treturn this._messagesQueue;\n\t}\n\n\tget destroyed() {\n\t\treturn this._destroyed;\n\t}\n\n\tconstructor({\n\t\tsecure,\n\t\thost,\n\t\tport,\n\t\tpath,\n\t\tkey,\n\t\tpingInterval = 5000,\n\t\tpolyfills,\n\t}: PeerJSOption) {\n\t\tsuper();\n\n\t\tthis.pingInterval = pingInterval;\n\n\t\tconst wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n\t\tthis._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n\t\tthis.WebSocketConstructor = polyfills?.WebSocket ?? window.WebSocket;\n\t}\n\n\tstart(id: string, token: string): void {\n\t\tif (this._destroyed) throw new Error(\"Socket was destroyed!\");\n\n\t\tthis._id = id;\n\n\t\tif (!!this._socket || !this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n\t\tthis._socket = new this.WebSocketConstructor(wsUrl);\n\t\tthis._disconnected = false;\n\n\t\tthis._socket.onmessage = (event) => {\n\t\t\tif (this._destroyed) return;\n\n\t\t\tlet data;\n\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(event.data);\n\t\t\t\tlogger.log(\"Server message received:\", data);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.log(\"Invalid server message\", event.data);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emit(SocketEventType.Message, data);\n\t\t};\n\n\t\tthis._socket.onclose = (event) => {\n\t\t\tif (this._disconnected || this._destroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.log(\"Socket closed.\", event);\n\n\t\t\tthis._cleanup();\n\t\t\tthis._disconnected = true;\n\n\t\t\tthis.emit(SocketEventType.Disconnected);\n\t\t};\n\n\t\t// Take care of the queue of connections if necessary and make sure Peer knows\n\t\t// socket is open.\n\t\tthis._socket.onopen = () => {\n\t\t\tif (this._disconnected || this._destroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.log(\"Socket open\");\n\n\t\t\tthis.emit(SocketEventType.Open);\n\n\t\t\tthis._sendQueuedMessages();\n\n\t\t\tthis._scheduleHeartbeat();\n\t\t};\n\t}\n\n\tprivate _scheduleHeartbeat(): void {\n\t\tthis._wsPingTimer = setTimeout(() => {\n\t\t\tthis._sendHeartbeat();\n\t\t}, this.pingInterval);\n\t}\n\n\tprivate _sendHeartbeat(): void {\n\t\tif (this._destroyed) return;\n\n\t\tif (!this._wsOpen()) {\n\t\t\tlogger.log(`Cannot send heartbeat, because socket closed`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n\t\tthis._socket!.send(message);\n\n\t\tthis._scheduleHeartbeat();\n\t}\n\n\t/** Is the websocket currently open? */\n\tprivate _wsOpen(): boolean {\n\t\treturn !!this._socket && this._socket.readyState === 1;\n\t}\n\n\t/** Send queued messages. */\n\tprivate _sendQueuedMessages(): void {\n\t\t//Create copy of queue and clear it,\n\t\t//because send method push the message back to queue if something will go wrong\n\t\tconst copiedQueue = [...this._messagesQueue];\n\t\tthis._messagesQueue = [];\n\n\t\tfor (const message of copiedQueue) {\n\t\t\tthis.send(message);\n\t\t}\n\n\t\tif (copiedQueue.length > 0) {\n\t\t\tlogger.log(`${copiedQueue.length} queued messages was sent`);\n\t\t}\n\t}\n\n\t/** Exposed send for DC & Peer. */\n\tsend(data: MessageData): void {\n\t\tif (this._destroyed) throw new Error(\"Socket was destroyed!\");\n\n\t\tif (!data.type) {\n\t\t\tthis.emit(SocketEventType.Error, \"Invalid message\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.alive) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we didn't get an ID yet, we can't yet send anything so we should queue\n\t\t// up these messages.\n\t\tif (this._id == null || !this._wsOpen()) {\n\t\t\tthis._messagesQueue.push(data);\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify(data);\n\n\t\tthis._socket!.send(message);\n\t}\n\n\tclose(): void {\n\t\tif (this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cleanup();\n\n\t\tthis._id = null;\n\n\t\tthis._disconnected = true;\n\t}\n\n\tprivate _cleanup(): void {\n\t\tif (this._socket) {\n\t\t\tthis._socket.onopen =\n\t\t\t\tthis._socket.onmessage =\n\t\t\t\tthis._socket.onclose =\n\t\t\t\t\tnull;\n\t\t\tthis._socket.close();\n\t\t\tthis._socket = undefined;\n\t\t}\n\n\t\tclearTimeout(this._wsPingTimer!);\n\t}\n\n\tdestroy() {\n\t\tif (this._destroyed) return;\n\n\t\tthis.close();\n\t\tthis._messagesQueue.length = 0;\n\n\t\tthis._destroyed = true;\n\t}\n}\n", "import logger from \"./logger\";\nimport type { MediaConnection } from \"./mediaconnection\";\nimport type { DataConnection } from \"./dataconnection\";\nimport {\n\tConnectionType,\n\tPeerErrorType,\n\tConnectionEventType,\n\tServerMessageType,\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\nfunction noop(): void {}\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n\tconstructor(readonly connection: BaseConnection) {}\n\n\tprivate get webRtc() {\n\t\treturn this.connection.provider.options.polyfills?.WebRTC ?? window;\n\t}\n\n\t/** Returns a PeerConnection object set up correctly (for data, media). */\n\tstartConnection(options: any) {\n\t\tconst peerConnection = this._startPeerConnection();\n\n\t\t// Set the connection's PC.\n\t\tthis.connection.peerConnection = peerConnection;\n\n\t\tif (this.connection.type === ConnectionType.Media && options._stream) {\n\t\t\tthis._addTracksToConnection(options._stream, peerConnection);\n\t\t}\n\n\t\t// What do we need to do now?\n\t\tif (options.originator) {\n\t\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\t\tconst dataConnection = this.connection as DataConnection;\n\n\t\t\t\tconst config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n\t\t\t\tconst dataChannel = peerConnection.createDataChannel(\n\t\t\t\t\tdataConnection.label,\n\t\t\t\t\tconfig,\n\t\t\t\t);\n\t\t\t\tdataConnection.initialize(dataChannel);\n\t\t\t}\n\n\t\t\tthis._makeOffer();\n\t\t} else {\n\t\t\tthis.handleSDP(\"OFFER\", options.sdp);\n\t\t}\n\t}\n\n\t/** Start a PC. */\n\tprivate _startPeerConnection(): RTCPeerConnection {\n\t\tlogger.log(\"Creating RTCPeerConnection.\");\n\n\t\tconst ctr: typeof RTCPeerConnection = this.webRtc.RTCPeerConnection;\n\n\t\tconst peerConnection = new ctr(this.connection.provider.options.config);\n\n\t\tthis._setupListeners(peerConnection);\n\n\t\treturn peerConnection;\n\t}\n\n\t/** Set up various WebRTC listeners. */\n\tprivate _setupListeners(peerConnection: RTCPeerConnection) {\n\t\tconst peerId = this.connection.peer;\n\t\tconst connectionId = this.connection.connectionId;\n\t\tconst connectionType = this.connection.type;\n\t\tconst provider = this.connection.provider;\n\n\t\t// ICE CANDIDATES.\n\t\tlogger.log(\n\t\t\t\"Listening for ICE candidates, remote streams and data channels.\",\n\t\t);\n\n\t\tpeerConnection.onicecandidate = (evt) => {\n\t\t\tif (!evt.candidate || !evt.candidate.candidate) return;\n\n\t\t\tlogger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n\t\t\tprovider.socket.send({\n\t\t\t\ttype: ServerMessageType.Candidate,\n\t\t\t\tpayload: {\n\t\t\t\t\tcandidate: evt.candidate,\n\t\t\t\t\ttype: connectionType,\n\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t},\n\t\t\t\tdst: peerId,\n\t\t\t});\n\t\t};\n\n\t\tpeerConnection.oniceconnectionstatechange = () => {\n\t\t\tswitch (peerConnection.iceConnectionState) {\n\t\t\t\tcase \"failed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is failed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emit(\n\t\t\t\t\t\tConnectionEventType.Error,\n\t\t\t\t\t\tnew Error(\"Negotiation of connection to \" + peerId + \" failed.\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"closed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is closed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emit(\n\t\t\t\t\t\tConnectionEventType.Error,\n\t\t\t\t\t\tnew Error(\"Connection to \" + peerId + \" closed.\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"connected\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState changed to connected on the connection with \" +\n\t\t\t\t\t\t\tpeerId,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disconnected\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState changed to disconnected on the connection with \" +\n\t\t\t\t\t\t\tpeerId,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"completed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState changed to completed on the connection with \" +\n\t\t\t\t\t\t\tpeerId,\n\t\t\t\t\t);\n\t\t\t\t\tpeerConnection.onicecandidate = noop;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.connection.emit(\n\t\t\t\tConnectionEventType.IceStateChanged,\n\t\t\t\tpeerConnection.iceConnectionState,\n\t\t\t);\n\t\t};\n\n\t\t// Fired between offer and answer, so options should already be saved\n\t\t// in the options hash.\n\t\tpeerConnection.ondatachannel = (evt) => {\n\t\t\tlogger.log(\"Received data channel\");\n\n\t\t\tconst dataChannel = evt.channel;\n\t\t\tconst connection = provider.getConnection(\n\t\t\t\tpeerId,\n\t\t\t\tconnectionId,\n\t\t\t) as DataConnection;\n\n\t\t\tconnection.initialize(dataChannel);\n\t\t};\n\n\t\tpeerConnection.ontrack = (evt) => {\n\t\t\tlogger.log(\"Received remote stream\");\n\n\t\t\tconst stream = evt.streams[0];\n\t\t\tconst connection = provider.getConnection(peerId, connectionId);\n\n\t\t\tif (connection.type === ConnectionType.Media) {\n\t\t\t\tconst mediaConnection = connection as MediaConnection;\n\n\t\t\t\tthis._addStreamToMediaConnection(stream, mediaConnection);\n\t\t\t}\n\t\t};\n\t}\n\n\tcleanup(): void {\n\t\tlogger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n\t\tconst peerConnection = this.connection.peerConnection;\n\n\t\tif (!peerConnection) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.connection.peerConnection = null;\n\n\t\t//unsubscribe from all PeerConnection's events\n\t\tpeerConnection.onicecandidate =\n\t\t\tpeerConnection.oniceconnectionstatechange =\n\t\t\tpeerConnection.ondatachannel =\n\t\t\tpeerConnection.ontrack =\n\t\t\t\tnull;\n\n\t\tconst peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n\t\tlet dataChannelNotClosed = false;\n\n\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\tconst dataConnection = this.connection as DataConnection;\n\t\t\tconst dataChannel = dataConnection.dataChannel;\n\n\t\t\tif (dataChannel) {\n\t\t\t\tdataChannelNotClosed =\n\t\t\t\t\t!!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n\t\t\t}\n\t\t}\n\n\t\tif (peerConnectionNotClosed || dataChannelNotClosed) {\n\t\t\tpeerConnection.close();\n\t\t}\n\t}\n\n\tprivate async _makeOffer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst offer = await peerConnection.createOffer(\n\t\t\t\tthis.connection.options.constraints,\n\t\t\t);\n\n\t\t\tif (peerConnection.signalingState === \"closed\") return;\n\n\t\t\tlogger.log(\"Created offer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\toffer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(offer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t\"Set localDescription:\",\n\t\t\t\t\toffer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tlet payload: any = {\n\t\t\t\t\tsdp: offer,\n\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\tmetadata: this.connection.metadata,\n\t\t\t\t};\n\n\t\t\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\t\t\tconst dataConnection = this.connection as DataConnection;\n\n\t\t\t\t\tpayload = {\n\t\t\t\t\t\t...payload,\n\t\t\t\t\t\tlabel: dataConnection.label,\n\t\t\t\t\t\treliable: dataConnection.reliable,\n\t\t\t\t\t\tserialization: dataConnection.serialization,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Offer,\n\t\t\t\t\tpayload,\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\t// TODO: investigate why _makeOffer is being called from the answer\n\t\t\t\tif (\n\t\t\t\t\terr !=\n\t\t\t\t\t\"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n\t\t\t\t) {\n\t\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to createOffer, \", err_1);\n\t\t}\n\t}\n\n\tprivate async _makeAnswer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst answer = await peerConnection.createAnswer();\n\n\t\t\tif (peerConnection.signalingState === \"closed\") return;\n\n\t\t\tlogger.log(\"Created answer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\tanswer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(answer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t`Set localDescription:`,\n\t\t\t\t\tanswer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Answer,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tsdp: answer,\n\t\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\t},\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to create answer, \", err_1);\n\t\t}\n\t}\n\n\t/** Handle an SDP. */\n\tasync handleSDP(type: string, sdp: any): Promise<void> {\n\t\tconst ctr: typeof RTCSessionDescription = this.webRtc.RTCSessionDescription;\n\n\t\tsdp = new ctr(sdp);\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\tlogger.log(\"Setting remote description\", sdp);\n\n\t\tconst self = this;\n\n\t\ttry {\n\t\t\tawait peerConnection.setRemoteDescription(sdp);\n\t\t\tlogger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n\t\t\tif (type === \"OFFER\") {\n\t\t\t\tawait self._makeAnswer();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to setRemoteDescription, \", err);\n\t\t}\n\t}\n\n\t/** Handle a candidate. */\n\tasync handleCandidate(ice: any): Promise<void> {\n\t\tlogger.log(`handleCandidate:`, ice);\n\n\t\tconst candidate = ice.candidate;\n\t\tconst sdpMLineIndex = ice.sdpMLineIndex;\n\t\tconst sdpMid = ice.sdpMid;\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst ctr: typeof RTCIceCandidate = this.webRtc.RTCIceCandidate;\n\n\t\t\tawait peerConnection.addIceCandidate(\n\t\t\t\tnew ctr({\n\t\t\t\t\tsdpMid: sdpMid,\n\t\t\t\t\tsdpMLineIndex: sdpMLineIndex,\n\t\t\t\t\tcandidate: candidate,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tlogger.log(`Added ICE candidate for:${this.connection.peer}`);\n\t\t} catch (err) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to handleCandidate, \", err);\n\t\t}\n\t}\n\n\tprivate _addTracksToConnection(\n\t\tstream: MediaStream,\n\t\tpeerConnection: RTCPeerConnection,\n\t): void {\n\t\tlogger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n\t\tif (!peerConnection.addTrack) {\n\t\t\treturn logger.error(\n\t\t\t\t`Your browser does't support RTCPeerConnection#addTrack. Ignored.`,\n\t\t\t);\n\t\t}\n\n\t\tstream.getTracks().forEach((track) => {\n\t\t\tpeerConnection.addTrack(track, stream);\n\t\t});\n\t}\n\n\tprivate _addStreamToMediaConnection(\n\t\tstream: MediaStream,\n\t\tmediaConnection: MediaConnection,\n\t): void {\n\t\tlogger.log(\n\t\t\t`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`,\n\t\t);\n\n\t\tmediaConnection.addStream(stream);\n\t}\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport type { Peer } from \"./peer\";\nimport type { ServerMessage } from \"./servermessage\";\nimport type { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n\tprotected _open = false;\n\n\treadonly metadata: any;\n\tconnectionId: string;\n\n\tpeerConnection: RTCPeerConnection;\n\n\tabstract get type(): ConnectionType;\n\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\tconstructor(\n\t\treadonly peer: string,\n\t\tpublic provider: Peer,\n\t\treadonly options: any,\n\t) {\n\t\tsuper();\n\n\t\tthis.metadata = options.metadata;\n\t}\n\n\tabstract close(): void;\n\n\tabstract handleMessage(message: ServerMessage): void;\n}\n", "import { Utils } from \"./utils\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n\tConnectionType,\n\tConnectionEventType,\n\tServerMessageType,\n} from \"./enums\";\nimport type { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport type { ServerMessage } from \"./servermessage\";\nimport type { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n\tprivate static readonly ID_PREFIX = \"mc_\";\n\n\tprivate _negotiator: Negotiator;\n\tprivate _localStream: MediaStream;\n\tprivate _remoteStream: MediaStream;\n\n\tget type() {\n\t\treturn ConnectionType.Media;\n\t}\n\n\tget localStream(): MediaStream {\n\t\treturn this._localStream;\n\t}\n\tget remoteStream(): MediaStream {\n\t\treturn this._remoteStream;\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis._localStream = this.options._stream;\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId ||\n\t\t\tMediaConnection.ID_PREFIX + Utils.randomToken();\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tif (this._localStream) {\n\t\t\tthis._negotiator.startConnection({\n\t\t\t\t_stream: this._localStream,\n\t\t\t\toriginator: true,\n\t\t\t});\n\t\t}\n\t}\n\n\taddStream(remoteStream) {\n\t\tlogger.log(\"Receiving stream\", remoteStream);\n\n\t\tthis._remoteStream = remoteStream;\n\t\tsuper.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n\t}\n\n\thandleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\t// Forward to negotiator\n\t\t\t\tthis._negotiator.handleSDP(type, payload.sdp);\n\t\t\t\tthis._open = true;\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tthis._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tanswer(stream: MediaStream, options: AnswerOption = {}): void {\n\t\tif (this._localStream) {\n\t\t\tlogger.warn(\n\t\t\t\t\"Local stream already exists on this MediaConnection. Are you answering a call twice?\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._localStream = stream;\n\n\t\tif (options && options.sdpTransform) {\n\t\t\tthis.options.sdpTransform = options.sdpTransform;\n\t\t}\n\n\t\tthis._negotiator.startConnection({\n\t\t\t...this.options._payload,\n\t\t\t_stream: stream,\n\t\t});\n\t\t// Retrieve lost messages stored because PeerConnection not set up.\n\t\tconst messages = this.provider._getMessages(this.connectionId);\n\n\t\tfor (let message of messages) {\n\t\t\tthis.handleMessage(message);\n\t\t}\n\n\t\tthis._open = true;\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/** Allows user to close connection. */\n\tclose(): void {\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tthis._localStream = null;\n\t\tthis._remoteStream = null;\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.options && this.options._stream) {\n\t\t\tthis.options._stream = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(ConnectionEventType.Close);\n\t}\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n\tprivate _queue: Blob[] = [];\n\tprivate _processing: boolean = false;\n\n\tconstructor(private readonly fileReader: FileReader) {\n\t\tsuper();\n\n\t\tthis.fileReader.onload = (evt) => {\n\t\t\tthis._processing = false;\n\n\t\t\tif (evt.target) {\n\t\t\t\tthis.emit(\"done\", evt.target.result as ArrayBuffer);\n\t\t\t}\n\n\t\t\tthis.doNextTask();\n\t\t};\n\n\t\tthis.fileReader.onerror = (evt) => {\n\t\t\tlogger.error(`EncodingQueue error:`, evt);\n\t\t\tthis._processing = false;\n\t\t\tthis.destroy();\n\t\t\tthis.emit(\"error\", evt);\n\t\t};\n\t}\n\n\tget queue(): Blob[] {\n\t\treturn this._queue;\n\t}\n\n\tget size(): number {\n\t\treturn this.queue.length;\n\t}\n\n\tget processing(): boolean {\n\t\treturn this._processing;\n\t}\n\n\tenque(blob: Blob): void {\n\t\tthis.queue.push(blob);\n\n\t\tif (this.processing) return;\n\n\t\tthis.doNextTask();\n\t}\n\n\tdestroy(): void {\n\t\tthis.fileReader.abort();\n\t\tthis._queue = [];\n\t}\n\n\tprivate doNextTask(): void {\n\t\tif (this.size === 0) return;\n\t\tif (this.processing) return;\n\n\t\tthis._processing = true;\n\n\t\tthis.fileReader.readAsArrayBuffer(this.queue.shift());\n\t}\n}\n", "import { Utils } from \"./utils\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n\tConnectionType,\n\tConnectionEventType,\n\tSerializationType,\n\tServerMessageType,\n} from \"./enums\";\nimport type { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport type { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from \"./encodingQueue\";\nimport type { DataConnection as IDataConnection } from \"../index\";\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n\tprivate static readonly ID_PREFIX = \"dc_\";\n\tprivate static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n\tprivate _negotiator: Negotiator;\n\treadonly label: string;\n\treadonly serialization: SerializationType;\n\treadonly reliable: boolean;\n\tstringify: (data: any) => string = JSON.stringify;\n\tparse: (data: string) => any = JSON.parse;\n\n\tget type() {\n\t\treturn ConnectionType.Data;\n\t}\n\n\tprivate _buffer: any[] = [];\n\tprivate _bufferSize = 0;\n\tprivate _buffering = false;\n\tprivate _chunkedData: {\n\t\t[id: number]: {\n\t\t\tdata: Blob[];\n\t\t\tcount: number;\n\t\t\ttotal: number;\n\t\t};\n\t} = {};\n\n\tprivate _dc: RTCDataChannel;\n\tprivate _encodingQueue: EncodingQueue;\n\n\tget dataChannel(): RTCDataChannel {\n\t\treturn this._dc;\n\t}\n\n\tget bufferSize(): number {\n\t\treturn this._bufferSize;\n\t}\n\n\tprivate readonly FileReaderCtr: typeof FileReader;\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId ||\n\t\t\tDataConnection.ID_PREFIX + Utils.randomToken();\n\n\t\tthis.label = this.options.label || this.connectionId;\n\t\tthis.serialization = this.options.serialization || SerializationType.Binary;\n\t\tthis.reliable = !!this.options.reliable;\n\n\t\tthis.FileReaderCtr =\n\t\t\tprovider.options.polyfills?.FileReader ?? window.FileReader;\n\n\t\tthis._encodingQueue = new EncodingQueue(new this.FileReaderCtr());\n\n\t\tthis._encodingQueue.on(\"done\", (ab: ArrayBuffer) => {\n\t\t\tthis._bufferedSend(ab);\n\t\t});\n\n\t\tthis._encodingQueue.on(\"error\", () => {\n\t\t\tlogger.error(\n\t\t\t\t`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`,\n\t\t\t);\n\t\t\tthis.close();\n\t\t});\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tthis._negotiator.startConnection(\n\t\t\tthis.options._payload || {\n\t\t\t\toriginator: true,\n\t\t\t},\n\t\t);\n\t}\n\n\t/** Called by the Negotiator when the DataChannel is ready. */\n\tinitialize(dc: RTCDataChannel): void {\n\t\tthis._dc = dc;\n\t\tthis._configureDataChannel();\n\t}\n\n\tprivate _configureDataChannel(): void {\n\t\tif (!this.provider.features.binaryBlob || this.provider.features.reliable) {\n\t\t\tthis.dataChannel.binaryType = \"arraybuffer\";\n\t\t}\n\n\t\tthis.dataChannel.onopen = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc connection success`);\n\t\t\tthis._open = true;\n\t\t\tthis.emit(ConnectionEventType.Open);\n\t\t};\n\n\t\tthis.dataChannel.onmessage = (e) => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n\t\t\tthis._handleDataMessage(e);\n\t\t};\n\n\t\tthis.dataChannel.onclose = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n\t\t\tthis.close();\n\t\t};\n\t}\n\n\t// Handles a DataChannel message.\n\tprivate _handleDataMessage({\n\t\tdata,\n\t}: {\n\t\tdata: Blob | ArrayBuffer | string;\n\t}): void {\n\t\tconst datatype = data.constructor;\n\n\t\tconst isBinarySerialization =\n\t\t\tthis.serialization === SerializationType.Binary ||\n\t\t\tthis.serialization === SerializationType.BinaryUTF8;\n\n\t\tlet deserializedData: any = data;\n\n\t\tif (isBinarySerialization) {\n\t\t\tif (datatype === Blob) {\n\t\t\t\t// Datatype should never be Blob\n\t\t\t\tUtils.blobToArrayBuffer(this.FileReaderCtr, data as Blob, (ab) => {\n\t\t\t\t\tconst unpackedData = Utils.unpack(ab);\n\t\t\t\t\tthis.emit(ConnectionEventType.Data, unpackedData);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (datatype === ArrayBuffer) {\n\t\t\t\tdeserializedData = Utils.unpack(data as ArrayBuffer);\n\t\t\t} else if (datatype === String) {\n\t\t\t\t// String fallback for binary data for browsers that don't support binary yet\n\t\t\t\tconst ab = Utils.binaryStringToArrayBuffer(data as string);\n\t\t\t\tdeserializedData = Utils.unpack(ab);\n\t\t\t}\n\t\t} else if (this.serialization === SerializationType.JSON) {\n\t\t\tdeserializedData = this.parse(data as string);\n\t\t}\n\n\t\t// Check if we've chunked--if so, piece things back together.\n\t\t// We're guaranteed that this isn't 0.\n\t\tif (deserializedData.__peerData) {\n\t\t\tthis._handleChunk(deserializedData);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.emit(ConnectionEventType.Data, deserializedData);\n\t}\n\n\tprivate _handleChunk(data: {\n\t\t__peerData: number;\n\t\tn: number;\n\t\ttotal: number;\n\t\tdata: Blob;\n\t}): void {\n\t\tconst id = data.__peerData;\n\t\tconst chunkInfo = this._chunkedData[id] || {\n\t\t\tdata: [],\n\t\t\tcount: 0,\n\t\t\ttotal: data.total,\n\t\t};\n\n\t\tchunkInfo.data[data.n] = data.data;\n\t\tchunkInfo.count++;\n\t\tthis._chunkedData[id] = chunkInfo;\n\n\t\tif (chunkInfo.total === chunkInfo.count) {\n\t\t\t// Clean up before making the recursive call to `_handleDataMessage`.\n\t\t\tdelete this._chunkedData[id];\n\n\t\t\t// We've received all the chunks--time to construct the complete data.\n\t\t\tconst data = new Blob(chunkInfo.data);\n\t\t\tthis._handleDataMessage({ data });\n\t\t}\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/** Allows user to close connection. */\n\tclose(): void {\n\t\tthis._buffer = [];\n\t\tthis._bufferSize = 0;\n\t\tthis._chunkedData = {};\n\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.dataChannel) {\n\t\t\tthis.dataChannel.onopen = null;\n\t\t\tthis.dataChannel.onmessage = null;\n\t\t\tthis.dataChannel.onclose = null;\n\t\t\tthis._dc = null;\n\t\t}\n\n\t\tif (this._encodingQueue) {\n\t\t\tthis._encodingQueue.destroy();\n\t\t\tthis._encodingQueue.removeAllListeners();\n\t\t\tthis._encodingQueue = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(ConnectionEventType.Close);\n\t}\n\n\t/** Allows user to send data. */\n\tsend(data: any, chunked?: boolean): void {\n\t\tif (!this.open) {\n\t\t\tsuper.emit(\n\t\t\t\tConnectionEventType.Error,\n\t\t\t\tnew Error(\n\t\t\t\t\t\"Connection is not open. You should listen for the `open` event before sending messages.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.serialization === SerializationType.JSON) {\n\t\t\tthis._bufferedSend(this.stringify(data));\n\t\t} else if (\n\t\t\tthis.serialization === SerializationType.Binary ||\n\t\t\tthis.serialization === SerializationType.BinaryUTF8\n\t\t) {\n\t\t\tconst blob = Utils.pack(data);\n\n\t\t\tif (!chunked && blob.size > Utils.chunkedMTU) {\n\t\t\t\tthis._sendChunks(blob);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.provider.features.binaryBlob) {\n\t\t\t\t// We only do this if we really need to (e.g. blobs are not supported),\n\t\t\t\t// because this conversion is costly.\n\t\t\t\tthis._encodingQueue.enque(blob);\n\t\t\t} else {\n\t\t\t\tthis._bufferedSend(blob);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedSend(data);\n\t\t}\n\t}\n\n\tprivate _bufferedSend(msg: any): void {\n\t\tif (this._buffering || !this._trySend(msg)) {\n\t\t\tthis._buffer.push(msg);\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t}\n\t}\n\n\t// Returns true if the send succeeds.\n\tprivate _trySend(msg: any): boolean {\n\t\tif (!this.open) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n\t\t\tthis._buffering = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._buffering = false;\n\t\t\t\tthis._tryBuffer();\n\t\t\t}, 50);\n\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.dataChannel.send(msg);\n\t\t} catch (e) {\n\t\t\tlogger.error(`DC#:${this.connectionId} Error when sending:`, e);\n\t\t\tthis._buffering = true;\n\n\t\t\tthis.close();\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Try to send the first message in the buffer.\n\tprivate _tryBuffer(): void {\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._buffer.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msg = this._buffer[0];\n\n\t\tif (this._trySend(msg)) {\n\t\t\tthis._buffer.shift();\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t\tthis._tryBuffer();\n\t\t}\n\t}\n\n\tprivate _sendChunks(blob: Blob): void {\n\t\tconst blobs = Utils.chunk(blob);\n\t\tlogger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n\t\tfor (let blob of blobs) {\n\t\t\tthis.send(blob, true);\n\t\t}\n\t}\n\n\thandleMessage(message: ServerMessage): void {\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\tthis._negotiator.handleSDP(message.type, payload.sdp);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tthis._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\n\t\t\t\t\t\"Unrecognized message type:\",\n\t\t\t\t\tmessage.type,\n\t\t\t\t\t\"from peer:\",\n\t\t\t\t\tthis.peer,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n", "import { Utils } from \"./utils\";\nimport logger from \"./logger\";\nimport { PeerJSOption } from \"..\";\n\nexport class API {\n\tconstructor(private readonly _options: PeerJSOption) {}\n\n\tprivate _request(url: string) {\n\t\treturn (this._options.polyfills?.fetch ?? window.fetch)(url);\n\t}\n\n\tprivate _buildUrl(method: string): string {\n\t\tconst protocol = this._options.secure ? \"https://\" : \"http://\";\n\t\tlet url =\n\t\t\tprotocol +\n\t\t\tthis._options.host +\n\t\t\t\":\" +\n\t\t\tthis._options.port +\n\t\t\tthis._options.path +\n\t\t\tthis._options.key +\n\t\t\t\"/\" +\n\t\t\tmethod;\n\t\tconst queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n\t\turl += queryString;\n\n\t\treturn url;\n\t}\n\n\t/** Get a unique ID from the server via XHR and initialize with it. */\n\tasync retrieveId(): Promise<string> {\n\t\tconst url = this._buildUrl(\"id\");\n\n\t\ttry {\n\t\t\tconst response = await this._request(url);\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.text();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving ID\", error);\n\n\t\t\tlet pathError = \"\";\n\n\t\t\tif (\n\t\t\t\tthis._options.path === \"/\" &&\n\t\t\t\tthis._options.host !== Utils.CLOUD_HOST\n\t\t\t) {\n\t\t\t\tpathError =\n\t\t\t\t\t\" If you passed in a `path` to your self-hosted PeerServer, \" +\n\t\t\t\t\t\"you'll also need to pass in that same path when creating a new \" +\n\t\t\t\t\t\"Peer.\";\n\t\t\t}\n\n\t\t\tthrow new Error(\"Could not get an ID from the server.\" + pathError);\n\t\t}\n\t}\n\n\t/** @deprecated */\n\tasync listAllPeers(): Promise<any[]> {\n\t\tconst url = this._buildUrl(\"peers\");\n\n\t\ttry {\n\t\t\tconst response = await this._request(url);\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tif (response.status === 401) {\n\t\t\t\t\tlet helpfulError = \"\";\n\n\t\t\t\t\tif (this._options.host === Utils.CLOUD_HOST) {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"It looks like you're using the cloud server. You can email \" +\n\t\t\t\t\t\t\t\"team@peerjs.com to enable peer listing for your API key.\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"You need to enable `allow_discovery` on your self-hosted \" +\n\t\t\t\t\t\t\t\"PeerServer to use this feature.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"It doesn't look like you have permission to list peers IDs. \" +\n\t\t\t\t\t\t\thelpfulError,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.json();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving list peers\", error);\n\n\t\t\tthrow new Error(\"Could not get list peers from the server.\" + error);\n\t\t}\n\t}\n}\n", "export const Supports = {\n\tisUnifiedPlanSupported(webRtc: any): boolean {\n\t\tif (!webRtc && typeof window !== \"undefined\") {\n\t\t\twebRtc = window;\n\t\t}\n\n\t\tif (\n\t\t\ttypeof webRtc.RTCRtpTransceiver === \"undefined\" ||\n\t\t\t!(\"currentDirection\" in webRtc.RTCRtpTransceiver.prototype)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet tempPc: RTCPeerConnection;\n\t\tlet supported = false;\n\n\t\ttry {\n\t\t\ttempPc = new webRtc.RTCPeerConnection();\n\t\t\ttempPc.addTransceiver(\"audio\");\n\t\t\tsupported = true;\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (tempPc) {\n\t\t\t\ttempPc.close();\n\t\t\t}\n\t\t}\n\n\t\treturn supported;\n\t},\n} as const;\n", "import { Utils } from \"./utils\";\nimport { Peer } from \"./peer\";\n\nexport { Peer, Utils };\n\nexport default Peer;\n\nif (typeof window !== \"undefined\") {\n\t// @ts-expect-error\n\twindow.Peer = Peer;\n}\n"],
  "mappings": "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",
  "names": ["BinaryPack", "EventEmitter", "import_eventemitter3", "import_eventemitter3", "import_eventemitter3", "data", "blob", "id", "message"]
}
